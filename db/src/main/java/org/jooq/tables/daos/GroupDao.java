/*
 * This file is generated by jOOQ.
*/
package org.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.tables.Group;
import org.jooq.tables.records.GroupRecord;


/**
 * 群組
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupDao extends DAOImpl<GroupRecord, org.jooq.tables.pojos.Group, Integer> {

    /**
     * Create a new GroupDao without any configuration
     */
    public GroupDao() {
        super(Group.GROUP, org.jooq.tables.pojos.Group.class);
    }

    /**
     * Create a new GroupDao with an attached configuration
     */
    public GroupDao(Configuration configuration) {
        super(Group.GROUP, org.jooq.tables.pojos.Group.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.jooq.tables.pojos.Group object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.jooq.tables.pojos.Group> fetchById(Integer... values) {
        return fetch(Group.GROUP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.jooq.tables.pojos.Group fetchOneById(Integer value) {
        return fetchOne(Group.GROUP.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.jooq.tables.pojos.Group> fetchByName(String... values) {
        return fetch(Group.GROUP.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public org.jooq.tables.pojos.Group fetchOneByName(String value) {
        return fetchOne(Group.GROUP.NAME, value);
    }
}
