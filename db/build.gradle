group 'com.endsound'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/org.jooq/jooq
    compile group: 'org.jooq', name: 'jooq', version: '3.10.5'
    // https://mvnrepository.com/artifact/org.jooq/jooq-codegen
    compile group: 'org.jooq', name: 'jooq-codegen', version: '3.10.5'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.2.0'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.4.RELEASE'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.10.5'
        classpath 'mysql:mysql-connector-java:6.0.6'
    }
}

import org.jooq.util.jaxb.*
import org.jooq.util.GenerationTool

task jooqGen{
    doLast {
        println('::Jooq Code Generate Start::')
        def jdbc = new Jdbc(
                driver: db_driver,
                url: db_url,
                user: db_username,
                password: db_password
        )

        def database = new Database(inputSchema: db_inputSchema)

        def generate = new Generate(pojos: true, daos: true)

        def target = new Target(packageName: 'org.jooq', directory: "$projectDir/src/main/java")

        def generator = new Generator(database: database, generate: generate, target: target)
        def configuration = new Configuration(jdbc: jdbc, generator: generator)
        GenerationTool.generate(configuration)

        println('::Jooq Code Generate End::')
    }
}
