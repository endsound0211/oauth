group 'com.endsound'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile project(':core')
    compile project(':db')

    // spring security
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.0.2.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.0.2.RELEASE'

    // jwt
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'io.jsonwebtoken:jjwt:0.9.0'
    }
}

import io.jsonwebtoken.Claims
import io.jsonwebtoken.Jwts
import io.jsonwebtoken.SignatureAlgorithm

import java.sql.Timestamp
import java.time.Instant

task generateCommonToken() {
    String securityKey
    String audience
    String issuer
    doFirst {
        securityKey = scan('::請輸入Security Key::')
        audience = scan('::請輸入Audience::')
        issuer = scan('::請輸入Issuer::')
    }

    doLast {
        Claims claims = Jwts.claims()
            .setSubject('common')
            .setAudience(audience)
            .setIssuer(issuer)
            .setIssuedAt(Timestamp.from(Instant.now()))

        claims.put('roles', ['ROLE_COMMON'])

        println('::CommonToken::')
        println(Jwts.builder().setClaims(claims).signWith(SignatureAlgorithm.HS512, securityKey).compact())
    }
}

def scan(String message){
    println(message)
    Scanner scanner = new Scanner(System.in)
    String readString = scanner.nextLine()

    while(Objects.isNull(readString) || readString.length() == 0){
        println(message)

        if(scanner.hasNextLine())
            readString = scanner.nextLine()
        else
            readString = null
    }
    return readString
}