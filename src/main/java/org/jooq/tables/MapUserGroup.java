/*
 * This file is generated by jOOQ.
*/
package org.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Oauth;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MapUserGroupRecord;


/**
 * 使用者群組對應
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MapUserGroup extends TableImpl<MapUserGroupRecord> {

    private static final long serialVersionUID = -1243147570;

    /**
     * The reference instance of <code>oauth.map_user_group</code>
     */
    public static final MapUserGroup MAP_USER_GROUP = new MapUserGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MapUserGroupRecord> getRecordType() {
        return MapUserGroupRecord.class;
    }

    /**
     * The column <code>oauth.map_user_group.user_id</code>. 使用者ID
     */
    public final TableField<MapUserGroupRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "使用者ID");

    /**
     * The column <code>oauth.map_user_group.group_id</code>. 群組ID
     */
    public final TableField<MapUserGroupRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "群組ID");

    /**
     * Create a <code>oauth.map_user_group</code> table reference
     */
    public MapUserGroup() {
        this("map_user_group", null);
    }

    /**
     * Create an aliased <code>oauth.map_user_group</code> table reference
     */
    public MapUserGroup(String alias) {
        this(alias, MAP_USER_GROUP);
    }

    private MapUserGroup(String alias, Table<MapUserGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private MapUserGroup(String alias, Table<MapUserGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "使用者群組對應");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oauth.OAUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MapUserGroupRecord> getPrimaryKey() {
        return Keys.KEY_MAP_USER_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MapUserGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<MapUserGroupRecord>>asList(Keys.KEY_MAP_USER_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MapUserGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MapUserGroupRecord, ?>>asList(Keys.FK_MAP_USER_GROUP_USER, Keys.FK_MAP_USER_GROUP_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapUserGroup as(String alias) {
        return new MapUserGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MapUserGroup rename(String name) {
        return new MapUserGroup(name, null);
    }
}
